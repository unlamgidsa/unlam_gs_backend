# Generated by Django 2.2.2 on 2020-08-19 16:57

from django.db import migrations

def deleteDuplicateRaw(apps, schema_editor):
    print("Borrando tabla de raws, proceso no atomico, esto puede demorar")
    #schema_editor.connection
    TlmyRawData = apps.get_model('Telemetry', 'TlmyRawData')
    for tl in TlmyRawData.objects.all():
        if tl.tlmyVars.count()==0:
            #print("Registro id", tl.id, "sera borrado")
            tl.delete()
            #tl.save()
            
    """
    dups = TlmyRawData.objects.values('id').annotate(Count('pktdatetime')).order_by().filter(id__count__gt=1)
    
    fdups = TlmyRawData.objects.filter(id__in=[item[id] for item in dups])
    for d in fdups:
        d.delete()
    """


class Migration(migrations.Migration):
    atomic = False
    
    dependencies = [
        ('GroundSegment', '0008_auto_20200804_2141'),
        ('Telemetry', '0051_auto_20200819_1651'),
    ]

    operations = [
        
        migrations.RunPython(deleteDuplicateRaw,  atomic=False ),
        migrations.AlterUniqueTogether(
            name='tlmyrawdata',
            unique_together={('pktdatetime', 'satellite')},
        ),
    ]
